name: Build and Release VS Code Extension

on:
  push:
    branches:
      - main
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run compile
      
    - name: Package extension
      run: npm run package
      
    - name: Get version from package.json
      id: get_version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extension version: $VERSION"
        
    - name: Create VSIX filename
      id: filename
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        FILENAME="jsonstr-$VERSION.vsix"
        echo "filename=$FILENAME" >> $GITHUB_OUTPUT
        echo "VSIX filename: $FILENAME"
        
    - name: Rename VSIX file
      run: |
        mv *.vsix ${{ steps.filename.outputs.filename }}
        
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension
        path: ${{ steps.filename.outputs.filename }}
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          ## JSON String Converter Extension v${{ steps.get_version.outputs.version }}
          
          ### Changes
          - Auto-built from main branch
          - Version: ${{ steps.get_version.outputs.version }}
          
          ### Installation
          Download the `.vsix` file and install via VS Code:
          1. Open VS Code
          2. Go to Extensions (Ctrl+Shift+X)
          3. Click the "..." menu and select "Install from VSIX..."
          4. Select the downloaded file
          
          ### Features
          - JSON format detection and conversion
          - Auto-detection mode (configurable)
          - Preserve indentation format
          - Silent mode support
          - Shortcut: Ctrl+Shift+T (Windows/Linux) or Cmd+Shift+T (Mac)
        files: ${{ steps.filename.outputs.filename }}
        draft: false
        prerelease: false 